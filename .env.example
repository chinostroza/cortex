# üß† C√≥rtex - Configuraci√≥n Multi-Provider
# Copia este archivo a .env y configura tus API keys reales
# cp .env.example .env

# ========================================
# üèä CONFIGURACI√ìN DEL WORKER POOL
# ========================================

# Estrategia de selecci√≥n de workers
# Opciones: local_first, round_robin, least_used, random
WORKER_POOL_STRATEGY=local_first

# Intervalo de health checks en segundos
HEALTH_CHECK_INTERVAL=60

# ========================================
# üè† OLLAMA LOCAL (Prioridad: 10 - M√ÅS ALTA)
# ========================================

# URLs de tus servidores Ollama locales (separados por comas)
OLLAMA_URLS=http://localhost:11434,http://192.168.1.100:11434

# Modelo por defecto para Ollama
OLLAMA_MODEL=llama3:8b

# Timeout para peticiones a Ollama (en milisegundos)
OLLAMA_TIMEOUT=120000

# ========================================
# ‚ö° GROQ (Prioridad: 20 - ULTRA R√ÅPIDO)
# ========================================

# API Keys de Groq (separadas por comas para rotaci√≥n autom√°tica)
# Obt√©n tus keys en: https://console.groq.com/
GROQ_API_KEYS=gsk_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,gsk_yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy

# Modelo por defecto de Groq
# Opciones: llama-3.3-70b-versatile, llama-3.1-8b-instant, llama-3.1-70b-versatile, mixtral-8x7b-32768
GROQ_MODEL=llama-3.1-8b-instant

# Timeout para Groq (m√°s bajo porque es muy r√°pido)
GROQ_TIMEOUT=30000

# ========================================
# üß† GOOGLE GEMINI (Prioridad: 30 - EQUILIBRADO)
# ========================================

# API Keys de Google Gemini (separadas por comas)
# Obt√©n tus keys en: https://makersuite.google.com/app/apikey
GEMINI_API_KEYS=AIzaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,AIzayyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy

# Modelo por defecto de Gemini
# Opciones: gemini-2.0-flash-001, gemini-1.5-pro, gemini-1.5-flash
GEMINI_MODEL=gemini-2.0-flash-001

# Timeout para Gemini
GEMINI_TIMEOUT=60000

# ========================================
# üí¨ COHERE (Prioridad: 40 - CONVERSACIONAL)
# ========================================

# API Keys de Cohere (separadas por comas)
# Obt√©n tus keys en: https://dashboard.cohere.com/api-keys
COHERE_API_KEYS=co_xxxxxxxxxxxxxxxxxxxxxxxxxx,co_yyyyyyyyyyyyyyyyyyyyyyyyyy

# Modelo por defecto de Cohere
# Opciones: command, command-light, command-nightly
COHERE_MODEL=command

# Timeout para Cohere
COHERE_TIMEOUT=60000

# ========================================
# üîë CONFIGURACI√ìN DE API KEY MANAGER
# ========================================

# Estrategia de rotaci√≥n de API keys
# Opciones: round_robin, least_used, random
API_KEY_ROTATION_STRATEGY=round_robin

# Minutos de bloqueo cuando se detecta rate limit
RATE_LIMIT_BLOCK_MINUTES=15

# Cleanup autom√°tico de keys bloqueados (en minutos)
CLEANUP_BLOCKED_KEYS_INTERVAL=1

# ========================================
# üåê CONFIGURACI√ìN DEL SERVIDOR
# ========================================

# Puerto donde correr√° el servidor Phoenix
PORT=4000

# Entorno de ejecuci√≥n
MIX_ENV=dev

# Secret key base para Phoenix (genera uno nuevo con: mix phx.gen.secret)
SECRET_KEY_BASE=your_super_secret_key_base_here_generate_with_mix_phx_gen_secret

# ========================================
# üìä CONFIGURACI√ìN AVANZADA (OPCIONAL)
# ========================================

# Habilitar logs detallados de workers
ENABLE_WORKER_DEBUGGING=false

# M√°ximo n√∫mero de reintentos por worker
MAX_WORKER_RETRIES=3

# Timeout global para todas las peticiones (ms)
GLOBAL_REQUEST_TIMEOUT=180000

# Habilitar m√©tricas de performance
ENABLE_METRICS=true

# ========================================
# üß™ CONFIGURACI√ìN DE TESTING
# ========================================

# API Keys para tests de integraci√≥n (opcional)
# Solo configurar si quieres ejecutar: mix test --only integration
TEST_GEMINI_API_KEY=
TEST_GROQ_API_KEY=
TEST_COHERE_API_KEY=

# ========================================
# üìù NOTAS IMPORTANTES
# ========================================

# 1. üîê SEGURIDAD: Nunca commitees el archivo .env con tus API keys reales
# 2. üöÄ PERFORMANCE: Ollama local siempre tiene prioridad m√°xima (m√°s r√°pido + gratis)
# 3. üí∞ COSTOS: Groq es gratis y ultra-r√°pido, √∫salo como backup principal
# 4. üîÑ FAILOVER: Si un provider falla, autom√°ticamente usa el siguiente
# 5. üîë ROTACI√ìN: Con m√∫ltiples keys, maximizas el uso de l√≠mites gratuitos
# 6. ‚è±Ô∏è RATE LIMITS: El sistema detecta autom√°ticamente y bloquea keys temporalmente
# 7. üìä MONITOREO: Usa los endpoints /api/health, /api/stats, /api/workers

# ========================================
# üöÄ COMANDOS √öTILES
# ========================================

# Copiar este archivo a .env:
# cp .env.example .env

# Iniciar servidor:
# mix phx.server

# Probar configuraci√≥n:
# curl http://localhost:4000/api/health

# Ejecutar tests:
# mix test --exclude integration

# Tests con APIs reales (requiere configurar TEST_*_API_KEY):
# mix test --only integration